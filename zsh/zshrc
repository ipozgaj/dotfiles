# zshrc
# (C) Igor Pozgaj <ipozgaj@gmail.com>
# vim: noexpandtab ts=4

# set paths
path=($path /bin /usr/bin /usr/local/bin $HOME/bin)
manpath=($manpath /usr/local/man /usr/share/man)
cdpath=($cdpath ~)
fpath=($fpath ~/.zfunc)

# set extra paths for root
if ((EUID==0)); then
	path=($path /sbin /usr/sbin /usr/local/sbin)
fi

# remove duplicate entries from paths
typeset -Ug path manpath cdpath fpath

# set umask
umask 022

# set limits
unlimit				# user hard limits
limit core 0		# no core dumps
limit maxproc 5000	# limit number of processes
limit -s			# use limits for this and child shells

# set emacs key bindings
bindkey -e

# common key bindings
bindkey "^U" backward-kill-line         # make CTRL-U behave like in bash
bindkey "^[[2~" yank					# Insert
bindkey "^[[3~" delete-char				# Delete
bindkey "^[[5~" up-line-or-history		# Page Up
bindkey "^[[6~" down-line-or-history	# Page Down
bindkey "^[[7~" beginning-of-line		# Home
bindkey "^[[8~" end-of-line				# End
bindkey "^[[A" up-line-or-search		# back-history-search on up arrow
bindkey "^[[B" down-line-or-search		# fwd-history-search on down arrow
bindkey "^[e" expand-cmd-path			# expand command name on C-e
bindkey " " magic-space					# history expansion on space

# open the current command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey "^X^e" edit-command-line

# allows incremental completion of a word
autoload -U incremental-complete-word
zle -N incremental-complete-word
bindkey "^Xi" incremental-complete-word

# allows typing a file pattern and shows the result of the expansion at each step
# if <CR> is hit, all the expansions are inserted into the command line
autoload -U insert-files
zle -N insert-files
bindkey "^Xf" insert-files

# set shell history options
HISTFILE=$HOME/.zhistory	# history file location
SAVEHIST=20000				# history file size
HISTSIZE=10000				# internal history list size

# size of directory stack
DIRSTACKSIZE=20

# set mail options
MAIL=/var/mail/$USERNAME
MAILCHECK=60

# report login/logout events of all except ourself, once in every minute
watch=(notme)
LOGCHECK=60
WATCHFMT='%n %a %l from %m at %t.'

# set prompt
PROMPT='%(!.%F{red}.%F{cyan})%n@%m %B%~%f%F{yellow} %#%f%b '

# don't ask 'do you wish to see all XX possibilities' before menu selection
LISTPROMPT=''

# spelling prompt
SPROMPT='zsh: correct '%R' to '%r' ? ([Y]es/[N]o/[E]dit/[A]bort) '

# command aliases
alias l='ls'
alias ls='ls -F --color=auto'
alias ll='ls -lh'
alias la='ls -a'
alias lla='ls -alh'
alias lsd='ls -ld *(-/DN)'
alias j='jobs -l'
alias p='ps uxf'
alias pa='ps auxf'
alias h='history -fD -20'
alias quit='exit'
alias vi='vim'
alias grep='grep --color'
alias egrep='egrep --color'
alias fgrep='fgrep --color'
alias pcregrep='pcregrep --color'
alias d="dirs -v"
alias 1="cd -"
alias 2="cd -2"
alias 3="cd -3"
alias 4="cd -4"
alias 5="cd -5"
alias 6="cd -6"
alias 7="cd -7"
alias 8="cd -8"
alias 9="cd -9"

# global aliases
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'

# sufix aliases
alias -s log="less"
alias -s json="jq ."
alias -s xml="xmllint --format"
alias -s git="git clone"
alias -s gz="gzip -l"
alias -s zip="unzip -l"
alias -s tar="tar tvf"
alias -s tgz="tar tvzf"
alias -s tbz2="tar tvjf"
alias -s cert="openssl x509 -noout -text -in"
alias -s pem="openssl x509 -noout -text -in"
alias -s der="openssl x509 -inform der -noout -text -in"

# extra safety for root
if ((EUID==0)); then
	alias rm='rm -i'
	alias cp='cp -i'
	alias mv='mv -i'
fi

# auto logout after 30 idle minutes if we're not in X,
# otherwise we rely on the desktop environment to lock the screen
case $TERM in
    linux)
        TMOUT=1800
        ;;
    *)
        unset TMOUT
        ;;
esac

# set terminal title if we're in X (user@host: cmd)
case $TERM in
		linux)
			;;

        *)
			precmd() {
				print -rn $'\e]0;'"${USER}@${HOST}"$'\a'
			}
			preexec() {
				print -rn $'\e]0;'"${USER}@${HOST}: ${(V)1}"$'\a'
			}
			;;
esac

# export some common variables
(( ${+TERM} )) || export TERM='vt100'
(( ${+PAGER} )) || export PAGER=$(which less)
(( ${+EDITOR} )) || export EDITOR=$(which vim)
(( ${+VISUAL} )) || export VISUAL=$EDITOR

# enable colors in less(1)
export LESS=FRKX                          # see man less(1)
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking-mode
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold-mode
export LESS_TERMCAP_me=$'\E[0m'           # end (blinking/bold)-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
export LESS_TERMCAP_ue=$'\E[0m'           # end underline

# customize ls colors
case $(uname) in
    Darwin)
        export CLICOLOR=1
        export LSCOLORS=ExFxCxDxBxegedabagacad
        ;;
    Linux)
        eval $(dircolors -b)
        ;;
esac

# setup completion
autoload -U compinit && compinit
zmodload -i zsh/complist

# set completion options
zstyle ':completion:*' completer _complete _list _oldlist _expand _ignored _match _correct _approximate _prefix
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format $'%{\e[0;31m%}%d%{\e[0m%}'
zstyle ':completion:*:messages' format $'%{\e[0;31m%}%d%{\e[0m%}'
zstyle ':completion:*:warnings' format $'%{\e[0;31m%}No matches for: %d%{\e[0m%}'
zstyle ':completion:*:corrections' format $'%{\e[0;31m%}%d (errors: %e)%{\e[0m%}'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' file-sort name
zstyle ':completion:*' menu select=long
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters
zstyle ':completion:*:expand:*' tag-order all-expansions
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path ~/.zcompcache/$HOST
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle -e ':completion:*:approximate:*' max-errors 'reply=( $(( ($#PREFIX+$#SUFFIX)/3 )) numeric )'

# generic completions for programs which understand GNU long options(--help)
compdef _gnu_generic make df du

# common usernames
users=(ipozgaj root)
zstyle ':completion:*' users $users

# common hostnames
hosts=(localhost)
zstyle ':completion:*' hosts $hosts

# (user,host) pairs
my_accounts=(ipozgaj@localhost root@localhost)
zstyle ':completion:*:my-accounts' users-hosts $my_accounts

# various shell options
setopt always_to_end			# when completing from middle, move to end
setopt auto_cd					# chdir to directory if we type its name only
setopt auto_pushd				# put directory on dir stack after chdir
setopt correct					# correct misspelled commands
setopt extended_glob			# set extended globing
setopt extended_history         # save timestamps and elapsed time in history file
setopt glob_complete			# do not expand globs to list of matched files, use completion
setopt hist_expire_dups_first	# when trimming history, remove oldest duplicates first
setopt hist_find_no_dups		# do not show duplicates on history-find
setopt hist_ignore_all_dups		# ignore duplicates in history file
setopt hist_ignore_space		# do not save commands starting with space
setopt hist_reduce_blanks		# remove superfluous blanks from history file
setopt hist_no_functions		# do not store function definitions
setopt hist_verify				# do not execute history expansion, load it only
setopt inc_append_history		# write entries to history files incrementaly
setopt interactive_comments		# allow comments in interractive shells
setopt mail_warning				# warn if mail file was accessed from last login
setopt multios                  # allow multiple redirections
setopt no_beep					# prevent beeps
setopt no_null_glob				# prevent expanding of non matched globs to *
setopt pushd_ignore_dups		# do not place duplicates on directory stack

# situational options that I don't want to be enabled all the time
# setopt printexitvalue         # print the value of $? if it's not zero
# setopt shwordsplit            # automatically splits multi-word strings into fields, like sh/bash

# load custom functions
autoload -U src                 # recompile and source zshrc
